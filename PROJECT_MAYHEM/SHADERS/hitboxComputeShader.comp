#version 460 core
#define jointsCount 29

layout(local_size_x=8) in;

struct JointPos{
	float x;
	float y;
	float z;
	float idx;
};

layout(binding=0,std430) buffer inBuffer{
	JointPos inPos[];
};

layout(binding=1,std430) buffer outBuffer{
	JointPos outPos[];
};

layout(binding=2,std430) buffer prevJointsBuffer{
	mat4 prevJoints[];
};

layout(binding=3,std430) buffer nextJointsBuffer{
	mat4 nextJoints[];
};

uniform mat4 model;

uniform float interpolation;

void main(){
	vec4 pos=vec4(inPos[gl_GlobalInvocationID.x].x,inPos[gl_GlobalInvocationID.x].y,inPos[gl_GlobalInvocationID.x].z,1.0f);
	//vec4 pos=vec4(inPos[gl_GlobalInvocationID.x].pos,1.0f);
	float idx=inPos[gl_GlobalInvocationID.x].idx;

	vec4 prevPos,nextPos;
	prevPos=prevJoints[int(idx)]*pos;
	nextPos=nextJoints[int(idx)]*pos;
	pos=prevPos+interpolation*(nextPos-prevPos);

	pos=model*pos;

	outPos[gl_GlobalInvocationID.x].x=pos.x;
	outPos[gl_GlobalInvocationID.x].y=pos.y;
	outPos[gl_GlobalInvocationID.x].z=pos.z;
	outPos[gl_GlobalInvocationID.x].idx=idx;

	outPos[gl_GlobalInvocationID.x].x+=5.0f;
	outPos[gl_GlobalInvocationID.x].y+=3.33f;
	outPos[gl_GlobalInvocationID.x].z+=1.27f;
	outPos[gl_GlobalInvocationID.x].idx+=13.4f;
}